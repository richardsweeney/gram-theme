button, input[type="button"], input[type="reset"], input[type="submit"],
button,
a.button {
  -webkit-font-smoothing: antialiased;
  background-color: #84af9d;
  border: none;
  color: #fff;
  cursor: pointer;
  display: inline-block;
  font-family: "Open Sans", sans-serif;
  font-size: 1rem;
  line-height: 1;
  padding: 0.75em 1em;
  text-decoration: none;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  -o-appearance: none;
  appearance: none;
  -webkit-transition: all 0.2s ease;
  -moz-transition: all 0.2s ease;
  transition: all 0.2s ease; }
  button:hover, button:focus, input[type="button"]:hover, input[type="button"]:focus, input[type="reset"]:hover, input[type="reset"]:focus, input[type="submit"]:hover, input[type="submit"]:focus,
  button:hover,
  button:focus,
  a.button:hover,
  a.button:focus {
    background-color: #5b8c77;
    color: #fff; }
  button:disabled, input[type="button"]:disabled, input[type="reset"]:disabled, input[type="submit"]:disabled,
  button:disabled,
  a.button:disabled {
    cursor: not-allowed;
    opacity: 0.5; }
  button.see-through, input[type="button"].see-through, input[type="reset"].see-through, input[type="submit"].see-through,
  button.see-through,
  a.button.see-through {
    background-color: white;
    border: 1px solid #84af9d;
    color: #84af9d; }
    button.see-through:hover, button.see-through:focus, input[type="button"].see-through:hover, input[type="button"].see-through:focus, input[type="reset"].see-through:hover, input[type="reset"].see-through:focus, input[type="submit"].see-through:hover, input[type="submit"].see-through:focus,
    button.see-through:hover,
    button.see-through:focus,
    a.button.see-through:hover,
    a.button.see-through:focus {
      background-color: #84af9d;
      color: white; }

fieldset {
  background-color: #f7f7f7;
  border: 1px solid #ddd;
  margin: 0 0 0.75rem;
  padding: 1.5rem; }

input,
label,
select {
  display: block;
  font-family: "Open Sans", sans-serif;
  font-size: 1rem; }

label {
  font-weight: 600;
  margin-bottom: 0.375rem; }
  label.required::after {
    content: "*"; }
  label abbr {
    display: none; }

input[type="color"], input[type="date"], input[type="datetime"], input[type="datetime-local"], input[type="email"], input[type="month"], input[type="number"], input[type="password"], input[type="search"], input[type="tel"], input[type="text"], input[type="time"], input[type="url"], input[type="week"], textarea,
select[multiple=multiple],
textarea {
  background-color: white;
  border: 1px solid #ddd;
  border-radius: 3px;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.06);
  box-sizing: border-box;
  font-family: "Open Sans", sans-serif;
  font-size: 1rem;
  margin-bottom: 0.75rem;
  padding: 0.5rem;
  transition: border-color;
  width: 100%; }
  input[type="color"]:hover, input[type="date"]:hover, input[type="datetime"]:hover, input[type="datetime-local"]:hover, input[type="email"]:hover, input[type="month"]:hover, input[type="number"]:hover, input[type="password"]:hover, input[type="search"]:hover, input[type="tel"]:hover, input[type="text"]:hover, input[type="time"]:hover, input[type="url"]:hover, input[type="week"]:hover, textarea:hover,
  select[multiple=multiple]:hover,
  textarea:hover {
    border-color: #c4c4c4; }
  input[type="color"]:focus, input[type="date"]:focus, input[type="datetime"]:focus, input[type="datetime-local"]:focus, input[type="email"]:focus, input[type="month"]:focus, input[type="number"]:focus, input[type="password"]:focus, input[type="search"]:focus, input[type="tel"]:focus, input[type="text"]:focus, input[type="time"]:focus, input[type="url"]:focus, input[type="week"]:focus, textarea:focus,
  select[multiple=multiple]:focus,
  textarea:focus {
    border-color: #ddd;
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.06), 0 0 5px rgba(117, 165, 145, 0.7);
    outline: none; }

textarea {
  resize: vertical; }

input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  -o-appearance: none;
  appearance: none; }

input[type="checkbox"],
input[type="radio"] {
  display: inline;
  margin-right: 0.375rem; }

input[type="file"] {
  padding-bottom: 0.75rem;
  width: 100%; }

select {
  margin-bottom: 1.5rem;
  max-width: 100%;
  width: auto; }

ul,
ol {
  margin: 0;
  padding: 0;
  margin-bottom: 0.75rem;
  padding-left: 1.5rem; }

dl {
  margin-bottom: 0.75rem; }
  dl dt {
    font-weight: bold;
    margin-top: 0.75rem; }
  dl dd {
    margin: 0; }

table {
  -webkit-font-feature-settings: "kern", "liga", "tnum";
  -moz-font-feature-settings: "kern", "liga", "tnum";
  -ms-font-feature-settings: "kern", "liga", "tnum";
  font-feature-settings: "kern", "liga", "tnum";
  border-collapse: collapse;
  margin: 0.75rem 0;
  table-layout: fixed;
  width: 100%; }

th {
  border-bottom: 1px solid #b7b7b7;
  font-weight: 600;
  padding: 0.75rem 0;
  text-align: left; }

td {
  border-bottom: 1px solid #ddd;
  padding: 0.75rem 0; }

tr,
td,
th {
  vertical-align: middle; }

body {
  -webkit-font-feature-settings: "kern", "liga", false;
  -moz-font-feature-settings: "kern", "liga", false;
  -ms-font-feature-settings: "kern", "liga", false;
  font-feature-settings: "kern", "liga", false;
  -webkit-font-smoothing: antialiased;
  color: #333;
  font-family: 'Open Sans', sans-serif;
  font-size: 1rem;
  line-height: 1.5; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: 'Pathway Gothic One', sans-serif;
  font-size: 1rem;
  line-height: 1.2;
  margin: 0 0 0.75rem; }

h1 {
  font-size: 3.125rem; }

h2 {
  font-size: 2.5rem; }

h3 {
  font-size: 1.875rem; }

h4 {
  font-size: 1.5625rem; }

h5 {
  font-size: 1.25rem; }

h6 {
  font-size: 1rem; }

p {
  margin: 0 0 0.75rem; }

a {
  color: #659b84;
  text-decoration: none;
  transition: color 0.1s linear; }
  a:active, a:focus, a:hover {
    color: #476d5d;
    text-decoration: underline; }
  a:active, a:focus {
    outline: none; }

hr {
  border-bottom: 1px solid #ddd;
  border-left: none;
  border-right: none;
  border-top: none;
  margin: 1.5rem 0; }

img,
picture {
  margin: 0;
  max-width: 100%; }

html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

/*--------------------------------------------------------------
Alignments
--------------------------------------------------------------*/
.alignleft {
  display: inline;
  float: left;
  margin-right: 0.75rem; }

.alignright {
  display: inline;
  float: right;
  margin-left: 0.75rem; }

.aligncenter {
  clear: both;
  display: block;
  margin-left: auto;
  margin-right: auto; }

figure {
  margin: 0;
  padding: 0; }
  figure figcaption {
    padding: 0.375rem;
    font-size: 0.875rem; }

/*--------------------------------------------------------------
Comments
--------------------------------------------------------------*/
.comment-content a {
  word-wrap: break-word; }

.bypostauthor {
  display: block; }

/*--------------------------------------------------------------
Media
--------------------------------------------------------------*/
.page-content .wp-smiley,
.entry-content .wp-smiley,
.comment-content .wp-smiley {
  border: none;
  margin-bottom: 0;
  margin-top: 0;
  padding: 0; }

/* Make sure embeds and iframes fit their containers. */
embed,
iframe,
object {
  max-width: 100%; }

/*--------------------------------------------------------------
Captions
--------------------------------------------------------------*/
.wp-caption {
  margin-bottom: 0.75rem;
  max-width: 100%; }

.wp-caption img[class*="wp-image-"] {
  display: block;
  margin: 0 auto; }

/*--------------------------------------------------------------
Galleries
--------------------------------------------------------------*/
.gallery {
  margin-bottom: 0.75rem; }

.gallery-item {
  display: inline-block;
  text-align: center;
  vertical-align: top;
  width: 100%; }

.gallery-columns-2 .gallery-item {
  max-width: 50%; }

.gallery-columns-3 .gallery-item {
  max-width: 33.33%; }

.gallery-columns-4 .gallery-item {
  max-width: 25%; }

.gallery-columns-5 .gallery-item {
  max-width: 20%; }

.gallery-columns-6 .gallery-item {
  max-width: 16.66%; }

.gallery-columns-7 .gallery-item {
  max-width: 14.28%; }

.gallery-columns-8 .gallery-item {
  max-width: 12.5%; }

.gallery-columns-9 .gallery-item {
  max-width: 11.11%; }

.gallery-caption {
  display: block; }

input[type="text"],
input[type="password"],
input[type="email"],
input[type="number"],
input[type="url"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  -o-appearance: none;
  appearance: none;
  border-radius: 0; }

.map-container {
  width: 100%;
  height: 400px; }

.site-header.container {
  margin-bottom: 1.5rem;
  padding-top: 1.5rem;
  padding-bottom: 0.75rem;
  border-bottom: 1px solid #f1f1f1;
  text-align: center; }
  .site-header.container::after {
    clear: both;
    content: "";
    display: table; }
  @media screen and (min-width: 40rem) {
    .site-header.container {
      padding: 1.5rem;
      text-align: left; } }

.home .site-header.container {
  border-bottom: none;
  margin-bottom: 0; }

.navigation .logo {
  margin-left: -3px; }
  @media screen and (min-width: 40rem) {
    .navigation .logo {
      float: left; } }
  .navigation .logo img {
    width: 160px; }

.nav-menu {
  padding-top: 0.75rem; }
  @media screen and (min-width: 40rem) {
    .nav-menu {
      float: right; } }
  .nav-menu ul {
    padding-left: 0; }
  .nav-menu li {
    display: inline-block;
    margin-right: 0.75rem; }
    .nav-menu li:last-child {
      margin-right: 0; }
  .nav-menu a {
    color: #333;
    border-bottom: 1px solid white;
    -webkit-transition: all 0.2s ease;
    -moz-transition: all 0.2s ease;
    transition: all 0.2s ease; }
    .nav-menu a:hover {
      text-decoration: none;
      border-color: #333; }
  .nav-menu .current-menu-item {
    border-bottom: 1px solid; }
    .nav-menu .current-menu-item a:hover {
      border-bottom: none; }

.parallax-window {
  max-height: 450px;
  overflow: hidden;
  position: relative;
  text-align: center;
  width: 100%; }

.parallax-static-content.container {
  color: white;
  position: relative;
  z-index: 9;
  background: rgba(0, 0, 0, 0.4);
  width: 550px;
  max-width: 100%;
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
  margin: 6rem auto;
  font-size: 1.25rem; }
  .parallax-static-content.container.page {
    margin: 7.5rem auto;
    padding-bottom: 0.75rem; }

.parallax-background {
  height: 900px;
  left: 0;
  position: absolute;
  top: -150px;
  width: 100%; }

.landing-page-image-credit {
  color: #ddd;
  padding: 0.375rem 0.75rem;
  background: rgba(0, 0, 0, 0.5);
  text-align: right;
  font-size: 0.875rem;
  position: absolute;
  right: 0;
  bottom: 0;
  left: 0; }
  .landing-page-image-credit a {
    color: #ddd;
    text-decoration: underline; }

.newsletter-container {
  background-color: #84af9d;
  padding: 3rem 0;
  max-width: 100%;
  margin-left: auto;
  margin-right: auto; }
  .newsletter-container::after {
    clear: both;
    content: "";
    display: table; }

.newsletter-inner-container {
  color: #fff; }
  @media screen and (min-width: 40rem) {
    .newsletter-inner-container {
      display: -webkit-box;
      display: -moz-box;
      display: box;
      display: -webkit-flex;
      display: -moz-flex;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-align: center;
      -moz-box-align: center;
      box-align: center;
      -webkit-align-items: center;
      -moz-align-items: center;
      -ms-align-items: center;
      -o-align-items: center;
      align-items: center;
      -ms-flex-align: center; } }
  .newsletter-inner-container button {
    width: 100%;
    border: 1px solid white; }

.feature-home-text {
  font-size: 1.25rem;
  padding-bottom: 1.5rem; }
  @media screen and (min-width: 40rem) {
    .feature-home-text {
      width: 48%;
      margin-right: 2%; } }

@media screen and (min-width: 40rem) {
  .nl-form {
    width: 48%; } }

.about-home-wrapper.container {
  padding-top: 1.5rem; }
  @media screen and (min-width: 40rem) {
    .about-home-wrapper.container {
      display: -webkit-box;
      display: -moz-box;
      display: box;
      display: -webkit-flex;
      display: -moz-flex;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-align: center;
      -moz-box-align: center;
      box-align: center;
      -webkit-align-items: center;
      -moz-align-items: center;
      -ms-align-items: center;
      -o-align-items: center;
      align-items: center;
      -ms-flex-align: center;
      padding-top: 3rem; }
      .about-home-wrapper.container .image-container {
        width: 32%; }
      .about-home-wrapper.container .about-text {
        width: 64%; }
      .about-home-wrapper.container .image-container {
        margin-right: 4%; } }
  .about-home-wrapper.container.video-section {
    padding-bottom: 3rem; }
    @media screen and (min-width: 40rem) {
      .about-home-wrapper.container.video-section .about-text {
        width: 48%; }
      .about-home-wrapper.container.video-section .video-container {
        width: 48%;
        margin-left: 4%;
        -webkit-box-flex: 1;
        -moz-box-flex: 1;
        box-flex: 1;
        -webkit-flex: 1 1 auto;
        -moz-flex: 1 1 auto;
        -ms-flex: 1 1 auto;
        flex: 1 1 auto; } }
  .about-home-wrapper.container iframe {
    width: 100%;
    border: 0; }
  .about-home-wrapper.container img {
    border-radius: 50%; }

@media screen and (min-width: 40rem) {
  .video-section {
    display: -webkit-box;
    display: -moz-box;
    display: box;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -moz-box-align: center;
    box-align: center;
    -webkit-align-items: center;
    -moz-align-items: center;
    -ms-align-items: center;
    -o-align-items: center;
    align-items: center;
    -ms-flex-align: center; } }

.posts-list {
  clear: both;
  display: -webkit-box;
  display: -moz-box;
  display: box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row wrap;
  -moz-flex-flow: row wrap;
  flex-flow: row wrap;
  -webkit-box-pack: left;
  -moz-box-pack: left;
  box-pack: left;
  -webkit-justify-content: left;
  -moz-justify-content: left;
  -ms-justify-content: left;
  -o-justify-content: left;
  justify-content: left;
  -ms-flex-pack: left;
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
  box-align: stretch;
  -webkit-align-items: stretch;
  -moz-align-items: stretch;
  -ms-align-items: stretch;
  -o-align-items: stretch;
  align-items: stretch;
  -ms-flex-align: stretch; }

.card-outer {
  background-color: #fcfcfc;
  border: 1px solid #ddd;
  border-radius: 3px;
  margin: 0 0 1rem;
  font-size: 0.9375rem;
  max-width: 510px;
  padding-bottom: 3rem;
  position: relative;
  -webkit-flex-grow: 1;
  -moz-flex-grow: 1;
  flex-grow: 1;
  -ms-flex-positive: 1; }
  @media screen and (min-width: 40rem) {
    .card-outer {
      margin-right: 2%; } }
  @media screen and (min-width: 40rem) and (max-width: 56.25rem) {
    .card-outer {
      width: 48%; }
      .card-outer:nth-of-type(2n + 2), .card-outer:last-child {
        margin-right: 0; } }
  @media screen and (min-width: 56.25rem) {
    .card-outer {
      width: 32%; }
      .card-outer:nth-of-type(3n + 3), .card-outer:last-child {
        margin-right: 0; } }
  .card-outer .entry-title {
    width: 85%;
    height: 90px;
    overflow: hidden;
    margin-bottom: 0; }
    .card-outer .entry-title a {
      color: #333; }
  .card-outer h2 {
    font-size: 2.25rem; }
  .card-outer .card-header {
    padding: 0.5rem 0.75rem 0;
    position: relative; }
  .card-outer footer {
    padding: 0 0.75rem 0.75rem; }
  .card-outer .post-details {
    padding-top: 0.75rem;
    font-size: 0.875rem; }
    .card-outer .post-details::after {
      clear: both;
      content: "";
      display: table; }
  .card-outer .card-copy {
    padding: 0 0.75rem 0.75rem; }
  .card-outer .button {
    position: absolute;
    bottom: 0.75rem;
    left: 0.75rem; }

.pagination.container {
  padding-top: 1.5rem;
  padding-bottom: 3rem;
  text-align: center; }

/* ----------------------------------
        SINGLE POSTS
  ----------------------------------- */
article.single-post {
  padding: 1.5rem 0; }
  @media screen and (min-width: 40rem) {
    article.single-post {
      float: left;
      display: block;
      margin-right: 2.12766%;
      width: 65.95745%;
      margin-left: 17.02128%; }
      article.single-post:last-child {
        margin-right: 0; } }

.single-post-feat-image {
  text-align: center; }

.single-post-article header {
  padding-bottom: 0.75rem; }

.single-post-article footer {
  margin-top: 1.5rem;
  padding-top: 0.75rem;
  border-top: 1px solid #f1f1f1; }

.single-post-pagination {
  padding: 0 0 3rem; }
  .single-post-pagination::after {
    clear: both;
    content: "";
    display: table; }

@media screen and (min-width: 40rem) {
  .prev-posts-link {
    float: left; }
  .next-posts-link {
    float: right; } }

.sections-page-header {
  margin-bottom: 1.5rem;
  text-align: center; }

.sections-container.container {
  padding-bottom: 3rem; }

.sections-section {
  padding-top: 3rem; }
  .sections-section::after {
    clear: both;
    content: "";
    display: table; }
  @media screen and (min-width: 40rem) {
    .sections-section {
      padding-bottom: 3rem; } }

@media screen and (min-width: 40rem) {
  .circular-image-with-text {
    display: -webkit-box;
    display: -moz-box;
    display: box;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -moz-box-align: center;
    box-align: center;
    -webkit-align-items: center;
    -moz-align-items: center;
    -ms-align-items: center;
    -o-align-items: center;
    align-items: center;
    -ms-flex-align: center; } }

.circular-image-with-text img {
  width: 400px;
  border-radius: 50%;
  padding-bottom: 0.75rem; }
  .circular-image-with-text img.svg {
    border-radius: 0; }
  @media screen and (min-width: 40rem) {
    .circular-image-with-text img {
      padding-bottom: 0;
      width: auto; } }

.circular-image-with-text .sections-section__image {
  text-align: center; }

.circular-image-with-text .sections-section__text h3 {
  text-align: center; }

@media screen and (min-width: 40rem) {
  .circular-image-with-text .sections-section__image {
    width: 32%;
    margin-right: 4%; }
  .circular-image-with-text .sections-section__text {
    width: 64%; }
    .circular-image-with-text .sections-section__text h3 {
      text-align: left; }
    .circular-image-with-text .sections-section__text.no-image {
      margin-left: 18%; }
  .circular-image-with-text.img-right .sections-section__image {
    order: 2;
    margin-left: 4%;
    margin-right: 0; }
  .circular-image-with-text.img-right .sections-section__text {
    order: 1; } }

.sections-section.wide-image-with-text .sections-section__image {
  margin: -0.75rem; }
  .sections-section.wide-image-with-text .sections-section__image.mobile-image {
    margin-bottom: 1.5rem; }
  .sections-section.wide-image-with-text .sections-section__image.desktop-image {
    display: none; }
  @media screen and (min-width: 40rem) {
    .sections-section.wide-image-with-text .sections-section__image.desktop-image {
      display: block; }
    .sections-section.wide-image-with-text .sections-section__image.mobile-image {
      display: none; } }

.sections-section.wide-image-with-text .sections-section__text {
  padding-bottom: 0.75rem;
  width: 100%; }
  @media screen and (min-width: 40rem) {
    .sections-section.wide-image-with-text .sections-section__text {
      text-align: center;
      float: left;
      display: block;
      margin-right: 2.12766%;
      width: 65.95745%;
      margin-left: 17.02128%; }
      .sections-section.wide-image-with-text .sections-section__text:last-child {
        margin-right: 0; } }

.products-container.container {
  padding-bottom: 3rem; }
  .products-container.container::after {
    clear: both;
    content: "";
    display: table; }

.products-list,
.products-list__products {
  list-style: none;
  margin: 0;
  max-width: 67.5rem;
  margin-left: auto;
  margin-right: auto; }
  .products-list::after,
  .products-list__products::after {
    clear: both;
    content: "";
    display: table; }

.products-list {
  padding: 0;
  display: flex;
  -webkit-flex-flow: row wrap;
  -moz-flex-flow: row wrap;
  flex-flow: row wrap;
  -webkit-box-pack: center;
  -moz-box-pack: center;
  box-pack: center;
  -webkit-justify-content: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -o-justify-content: center;
  justify-content: center;
  -ms-flex-pack: center; }

.products-list__products {
  padding: 0.75rem; }

.modal-container .products-list__products {
  display: block; }

.products-list__parent-list-item {
  margin-bottom: 2%;
  margin-right: 2%; }
  @media screen and (min-width: 450px) and (max-width: 56.25rem) {
    .products-list__parent-list-item {
      width: 49%; }
      .products-list__parent-list-item:nth-of-type(2n + 2) {
        margin-right: 0; } }
  @media screen and (min-width: 56.25rem) {
    .products-list__parent-list-item {
      width: 32%; }
      .products-list__parent-list-item:nth-of-type(3n + 3) {
        margin-right: 0; } }
  .products-list__parent-list-item a {
    display: block;
    position: relative;
    border: 1px solid #ddd;
    border-radius: 1px; }
    .products-list__parent-list-item a .category-text-container {
      background: rgba(194, 147, 65, 0.8); }
      @media screen and (min-width: 40rem) {
        .products-list__parent-list-item a .category-text-container {
          background: none; } }
    .products-list__parent-list-item a:hover, .products-list__parent-list-item a.active {
      border-color: #c29341; }
      .products-list__parent-list-item a:hover h2, .products-list__parent-list-item a.active h2 {
        opacity: 1; }
      .products-list__parent-list-item a:hover .category-text-container, .products-list__parent-list-item a.active .category-text-container {
        background: rgba(194, 147, 65, 0.9); }

.category-text-container {
  display: flex;
  background: rgba(194, 147, 65, 0);
  text-align: center;
  -webkit-transition: background 0.3s ease;
  -moz-transition: background 0.3s ease;
  transition: background 0.3s ease;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  -webkit-box-align: center;
  -moz-box-align: center;
  box-align: center;
  -webkit-align-items: center;
  -moz-align-items: center;
  -ms-align-items: center;
  -o-align-items: center;
  align-items: center;
  -ms-flex-align: center;
  -webkit-box-pack: center;
  -moz-box-pack: center;
  box-pack: center;
  -webkit-justify-content: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -o-justify-content: center;
  justify-content: center;
  -ms-flex-pack: center; }
  @media screen and (min-width: 40rem) {
    .category-text-container {
      bottom: 0;
      background: none; } }
  .category-text-container h2 {
    color: white;
    -webkit-transition: opacity 0.3 ease;
    -moz-transition: opacity 0.3 ease;
    transition: opacity 0.3 ease; }
    @media screen and (min-width: 40rem) {
      .category-text-container h2 {
        display: block;
        opacity: 0; } }

.footer {
  background: #84af9d;
  color: #fff;
  max-width: 100%;
  margin-left: auto;
  margin-right: auto; }
  .footer::after {
    clear: both;
    content: "";
    display: table; }
  .footer .footer-inner {
    padding-top: 3rem;
    padding-bottom: 1.5rem; }
    @media screen and (min-width: 40rem) {
      .footer .footer-inner {
        display: -webkit-box;
        display: -moz-box;
        display: box;
        display: -webkit-flex;
        display: -moz-flex;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-align: end;
        -moz-box-align: end;
        box-align: end;
        -webkit-align-items: flex-end;
        -moz-align-items: flex-end;
        -ms-align-items: flex-end;
        -o-align-items: flex-end;
        align-items: flex-end;
        -ms-flex-align: end; } }

.footer-inner-column {
  display: block;
  text-align: center;
  margin: 0 auto;
  padding-bottom: 1.5rem; }
  @media screen and (min-width: 40rem) {
    .footer-inner-column {
      margin: 0 2% 0 0;
      text-align: left;
      width: 48%; }
      .footer-inner-column:nth-of-type(2n + 2), .footer-inner-column:last-child {
        margin-right: 0; } }

.footer-logo {
  display: block; }
  .footer-logo img {
    max-width: 250px; }

.social-link-list {
  list-style: none;
  padding: 0;
  margin: 0;
  display: block; }
  .social-link-list li {
    display: inline-block; }
  .social-link-list svg {
    opacity: 0.8;
    fill: white;
    height: 40px;
    width: 40px;
    -webkit-transition: opacity 0.2s ease;
    -moz-transition: opacity 0.2s ease;
    transition: opacity 0.2s ease; }
    .social-link-list svg:hover {
      opacity: 1; }

@media screen and (min-width: 40rem) {
  .footer-inner-column .social-link-list {
    text-align: right; } }

/* ----------------------------------
        FOOTER 2
  ----------------------------------- */
.footer-2 {
  background: #c29341;
  border-top: 2px solid white;
  color: #fff;
  padding: 2.25rem 0;
  text-align: center; }
  .footer-2::after {
    clear: both;
    content: "";
    display: table; }
  .footer-2 a {
    color: #fff;
    text-decoration: underline; }

.modal .modal-state {
  display: none; }

.modal .modal-fade-screen {
  background-color: rgba(0, 0, 0, 0.6);
  opacity: 0;
  padding-top: 0.6em;
  text-align: left;
  transition: opacity 0.25s ease;
  visibility: hidden;
  z-index: 99999999999;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0; }
  @media screen and (min-width: 56.25rem) {
    .modal .modal-fade-screen {
      padding-top: 3rem; } }
  .modal .modal-fade-screen .modal-bg {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    cursor: pointer; }

.modal .modal-close {
  background: white;
  cursor: pointer;
  position: absolute;
  top: 1.5rem;
  right: 1.5rem;
  height: 1.5em;
  width: 1.5em; }
  .modal .modal-close::after, .modal .modal-close::before {
    background: #919191;
    content: "";
    display: block;
    margin: -3px 0 0 -1px;
    transform: rotate(45deg);
    position: absolute;
    top: 3px;
    right: 3px;
    bottom: 0;
    left: 50%;
    height: 1.5em;
    width: 0.15em; }
  .modal .modal-close:hover::after, .modal .modal-close:hover::before {
    background: #777777; }
  .modal .modal-close::before {
    transform: rotate(-45deg); }

.modal .modal-inner {
  background: white;
  border-radius: 3px;
  margin: auto;
  margin-top: 0;
  max-height: 95%;
  overflow: auto;
  padding: 1.5rem;
  position: relative;
  transition: opacity 0.25s ease;
  width: 95%;
  max-width: 700px; }
  @media screen and (min-width: 40rem) {
    .modal .modal-inner {
      padding: 2.25rem 3rem;
      width: 60%; } }
  @media screen and (min-width: 40rem) {
    .modal .modal-inner .modal-content.lots {
      columns: 2 8em; } }
  .modal .modal-inner ul {
    list-style: none;
    padding: 0; }

.modal .modal-navigation {
  padding-top: 1.5rem; }
  .modal .modal-navigation::after {
    clear: both;
    content: "";
    display: table; }
  .modal .modal-navigation button {
    padding: 0.5rem 0.75rem; }
  .modal .modal-navigation .prev {
    float: left; }
  .modal .modal-navigation .next {
    float: right; }

.modal .modal-state:checked + .modal-fade-screen {
  opacity: 1;
  visibility: visible; }

.modal .modal-state:checked + .modal-fade-screen .modal-inner {
  top: 0.5em; }

.modal-open {
  overflow: hidden; }

body,
html {
  margin: 0; }

img {
  max-width: 100%;
  height: auto; }

svg {
  display: inline-block;
  vertical-align: middle;
  height: 1.25rem;
  width: 1.25rem; }

.site::after {
  clear: both;
  content: "";
  display: table; }

.site-content,
.site-footer {
  max-width: 67.5rem;
  margin-left: auto;
  margin-right: auto; }
  .site-content::after,
  .site-footer::after {
    clear: both;
    content: "";
    display: table; }

.container {
  max-width: 67.5rem;
  margin-left: auto;
  margin-right: auto;
  padding: 0 0.75rem; }
  .container::after {
    clear: both;
    content: "";
    display: table; }
  @media screen and (min-width: 40rem) {
    .container {
      padding: 0 1.5rem; } }

.centered-content {
  padding: 1.5rem 0 3rem; }
  @media screen and (min-width: 56.25rem) {
    .centered-content {
      padding: 1.5rem 1.5rem 3rem;
      float: left;
      display: block;
      margin-right: 2.12766%;
      width: 65.95745%;
      margin-left: 17.02128%; }
      .centered-content:last-child {
        margin-right: 0; } }

body div.sharedaddy h3.sd-title {
  font-size: 1.5rem;
  margin: 1.5rem 0 0.75rem; }
  body div.sharedaddy h3.sd-title:before {
    border-top: none;
    margin: 0; }

.skip-link,
.screen-reader-text {
  display: none; }

.parallax-window {
  min-height: 400px; }

/*# sourceMappingURL=data:application/json;base64, */
